/*
COLORS:

Light green: #7ed56f
Medium green: #55c57a
Dark green: #28b485

*/
$Light-green: #7ed56f;
$Medium-green: #55c57a;
$Dark-green: #28b485;

* {
  padding: 0;
  margin: 0;
  box-sizing: inherit;
  /*use inherit to pass down this property value to children*/
}

html {
  font-size: 62.5%;
  /*here we set the root size in "html", normally root font size is 16px, but change to 10px for easier calculation
    so 16*62.5%=10px. Using % is for user to change size on their own prefrence.
    So after this, 1rem = 10px, this apply to ALL size properties*/
}

body {
  font-family: "Lato", sans-serif;
  font-size: 1.6rem;
  font-weight: 600;
  line-height: 1.7;
  color: #777;
  padding: 3rem;
  box-sizing: border-box;
  /* allows us to include the padding and border in an element's total width and height.*/
}

.header {
  height: 95vh;
  position: relative;
  background-image: linear-gradient(
      to right,
      rgba($Light-green, 0.795),
      rgba($Dark-green, 0.795)
    ),
    url(../img/hero.jpg);
  background-size: cover;
  background-position: top;
  /*this will crop the bottom of the background image*/
  clip-path: polygon(0 0, 100% 0, 100% 700px, 0 100%);
  /*to shape the background, from top left to top right to bottom right... */
}

.header__logo-box {
  position: absolute;
  /*parent element must be relative*/
  top: 4rem;
  left: 4rem;
}

.header__logo {
  height: 3.5rem;
}

.header__text-box {
  position: absolute;
  left: 50%;
  top: 50%;
  transform: translate(-50%, -50%);
  text-align: center;
  /* use top & left to put the left boarder and top boarder to the 50% position. Then offset the box 50% so that the box is at the middle of the screen*/
  /*this method is not mobile first*/
}

.header-primary {
  color: rgb(255, 255, 255);
}

.header-primary--1 {
  display: block;
  font-size: 7rem;
  font-weight: 500;
  letter-spacing: 2.5rem;
  animation: moveInRight 1s;
  /*
    animation-name: moveInRight;
    animation-duration: 1s;
    */
}

.header-primary--2 {
  display: block;
  font-size: 3rem;
  font-weight: 500;
  letter-spacing: 0.8rem;
  animation: moveInLeft 1s;
}

.btn:link,
.btn:visited {
  /*:link represent "link" element that has not been visited*/
  text-transform: uppercase;
  /*here <a> is treated as TEXT*/
  text-decoration: none;
  display: inline-block;
  padding: 1rem 6rem;
  margin-top: 4rem;
  border-radius: 10rem;
  transition: all 0.2s;
  /*spesify all animation happened at this element*/
  position: relative;
}

.btn--animated {
  animation: moveInBottom 0.7s 0.7s;
  /*delay 0.7s to perform animation*/
  animation-fill-mode: backwards;
  /*set the btn state to 0% of the animation which 0 opacity, very tricky!*/
}

.btn:hover {
  transform: translateY(-0.3rem);
  /*minus means goes up*/
  box-shadow: 0 1rem 3rem rgba(7, 7, 7, 0.384);
  /* horizontal, vertical, blur, color*/
}

.btn:active {
  transform: translateY(-0.3rem);
  box-shadow: 0 0.5rem 1rem rgba(7, 7, 7, 0.384);
}

.btn--white {
  background-color: rgb(253, 253, 253);
  color: #777;
}

/*here we create a sudo element behide the button, absolute position make it behide the button, the box of the sudo element is the button size*/
.btn::after {
  content: "";
  display: inline-block;
  height: 100%;
  width: 100%;
  border-radius: 100px;
  position: absolute;
  top: 0;
  left: 0;
  z-index: -1;
  transition: all 0.4s;
}

.btn--white::after {
  background-color: rgb(255, 253, 253);
}

.btn:hover::after {
  transform: scaleX(1.5) scaleY(1.5);
  opacity: 0;
  /*the sudo button will become larger at first, then becomes invisible*/
}

@keyframes moveInRight {
  /*use @keyframes to define animation*/
  0% {
    opacity: 0;
    transform: translateX(-20rem);
  }
  80% {
    opacity: 1;
    transform: translateX(2rem);
  }
  100% {
    opacity: 1;
    transform: translateX(0rem);
  }
}

@keyframes moveInLeft {
  /*use @keyframes to define animation*/
  0% {
    opacity: 0;
    transform: translateX(20rem);
  }
  80% {
    opacity: 1;
    transform: translateX(-2rem);
  }
  100% {
    opacity: 1;
    transform: translateX(0rem);
  }
}

@keyframes moveInBottom {
  /*use @keyframes to define animation*/
  0% {
    opacity: 0;
    transform: translateY(5rem);
  }

  80% {
    opacity: 1;
    transform: translateY(-1rem);
  }

  100% {
    opacity: 1;
    transform: translateX(0rem);
  }
}
